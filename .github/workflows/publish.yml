name: Publish to ProGet

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update project versions
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          echo "Setting version to $VERSION in all .csproj files..."
          for file in $(find . -name '*.csproj'); do
            if grep -q "<Version>" "$file"; then
              sed -i "s|<Version>.*</Version>|<Version>$VERSION</Version>|" "$file"
            else
              # Insert version inside <PropertyGroup> if missing
              sed -i "0,/<PropertyGroup>/s|<PropertyGroup>|<PropertyGroup>\n    <Version>$VERSION</Version>|" "$file"
            fi
          done
          
      - name: Verify version update
        run: grep -R "<Version>" . | grep -v obj/

      - name: Build and pack
        run: dotnet pack --configuration Release --output ./artifacts

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: nupkgs
          path: ./artifacts/*.nupkg

      - name: Push to ProGet
        env:
          PROGET_API_KEY: ${{ secrets.PROGET_API_KEY }}
        run: |
          dotnet nuget push "./artifacts/*.nupkg" \
            --api-key $PROGET_API_KEY \
            --source "https://proget.gtlabs.com.br/nuget/gtlabs-dotnet/"